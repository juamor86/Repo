apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply from: '../ktlint.gradle'

apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.google.firebase.crashlytics'

apply plugin: 'com.huawei.agconnect'

android {
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    configurations {
        all*.exclude module: 'bcprov-jdk15on'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    configurations {
        all*.exclude module: 'bcprov-jdk15on'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    signingConfigs {
        debug {
            storeFile file('../keystore/debug/msspa_salud_andalucia.jks')
            storePassword 'msspa_salud_andalucia'
            keyAlias = 'msspa_salud_andalucia_debug'
            keyPassword 'msspa_salud_andalucia'
        }
        release {
            storeFile file('../keystore/release/msspa_salud_andalucia.jks')
            storePassword 'msspa_salud_andalucia'
            keyAlias = 'msspa_salud_andalucia'
            keyPassword 'msspa_salud_andalucia'
            v1SigningEnabled false
            v2SigningEnabled true
        }

    }
    compileSdkVersion 31
    buildToolsVersion "29.0.3"
    defaultConfig {
        minSdkVersion 25
        targetSdkVersion 31
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions 'product','config','mobileServices'
    productFlavors {

        def nameVersionSas = "3.5.0"
        def vCodeSas = 3050000
        def nameVersion360 = "1.0.0"
        def vCode360 = 1000000

        saludandalucia {
            dimension "product"
            versionCode vCodeSas
            versionName nameVersionSas
            applicationId "es.juntadeandalucia.msspa.saludandalucia"
            resValue "string", "app_name", "Salud AndalucÃ­a"
            buildConfigField 'String', 'APP_KEY_IDENTIFICATION', '"msspa.app.102"'
            buildConfigField 'String', 'SCOPE', '"ciudadano"'
            buildConfigField "String", "VERSION", "\"$nameVersionSas\""
        }

        pre0 { // Configuration for Salud Andalucia in the PRE environment
            dimension "config"
            versionNameSuffix ' - PRE'
            buildConfigField 'String', 'API_BASE_HOST', '"https://ws237.sspa.juntadeandalucia.es:9443"'
            buildConfigField 'String', 'LEGACY_APP_IDENTIFICATION', '"l7db4659ecc8294d23af050f741e20d8dd"'
            buildConfigField 'String', 'API_KEY_IDENTIFICATION', '"l7460a9e8f1e594654ac37ac53fd2ee8e2"'
        }

        pro0 { // Configuration for Salud Andalucia in the PRO environment
            dimension "config"
            buildConfigField 'String', 'API_BASE_HOST', '"https://ws238.sspa.juntadeandalucia.es:9443"'
            buildConfigField 'String', 'LEGACY_APP_IDENTIFICATION', '"l7a7fda79bc20243a490b8e925402979a5"'
            buildConfigField 'String', 'API_KEY_IDENTIFICATION', '"l7de51d5dbe59c439cab7e11812675e7eb"'
        }

        tressesenta {
            dimension "product"
            versionCode vCode360
            versionName nameVersion360
            applicationId "es.juntadeandalucia.msspa.sastressesenta"
            resValue "string", "app_name", "SAS 360"
            buildConfigField 'String', 'APP_KEY_IDENTIFICATION', '"msspa.app.103"'
            buildConfigField 'String', 'SCOPE', '"profesional"'
            buildConfigField "String", "VERSION", "\"$nameVersion360\""
        }

        pre1 { // Configuration for SAS 360 in the PRE environment
            dimension "config"
            versionNameSuffix ' - PRE'
            buildConfigField 'String', 'API_BASE_HOST', '"https://ws237.sspa.juntadeandalucia.es:9443"'
            buildConfigField 'String', 'LEGACY_APP_IDENTIFICATION', '"l7b55d2869927b4d14bce93d8972f451b0"'
            buildConfigField 'String', 'API_KEY_IDENTIFICATION', '"l72a803cb2b2a047468391553e2ce693ef"'
        }

        pro1 { // Configuration for SAS 360 in the PRO environment
            dimension "config"
            buildConfigField 'String', 'API_BASE_HOST', '"https://ws238.sspa.juntadeandalucia.es:9443"'
            buildConfigField 'String', 'LEGACY_APP_IDENTIFICATION', '"l786c43f6c30aa43ebb3eb60fd0177b4a3"'
            buildConfigField 'String', 'API_KEY_IDENTIFICATION', '"l775376c1ca8954e19b125baf356e4227c"'
        }

        gms {
            dimension "mobileServices"
        }

        hms {
            dimension "mobileServices"
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if (names.contains("saludandalucia") && (names.contains("pre1") || names.contains("pro1"))) {
            setIgnore(true)
        }
        if (names.contains("tressesenta") && (names.contains("pre0") || names.contains("pro0"))) {
            setIgnore(true)
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.biometric:biometric:1.0.1'
    implementation 'androidx.recyclerview:recyclerview-selection:1.0.0'
    implementation 'com.google.zxing:core:3.4.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'org.mockito:mockito-inline:3.3.3'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Login
    implementation("es.juntadeandalucia.msspa:authentication:$mSSPAAuthVersion")

    implementation 'androidx.activity:activity:1.2.0-rc01'
    implementation 'androidx.activity:activity-ktx:1.2.0-rc01'
    implementation 'androidx.fragment:fragment:1.3.0-rc01'


    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    //Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // RX
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    implementation "androidx.work:work-runtime-ktx:$workVersion"
    implementation "androidx.work:work-rxjava2:$workVersion"

    // CardSlider
    implementation "com.github.IslamKhSh:CardSlider:$cardSliderVersion"

    //Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"

    //OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okio:okio:$okioVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    //Gson
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    //Picasso
    implementation "com.squareup.picasso:picasso:$picassoVersion"

    // Firebase
    implementation "com.google.firebase:firebase-messaging:$firebaseMessagingVersion"

    // Room
    implementation "androidx.room:room-runtime:'$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    //Firebase SDK for Google Analytics.
    implementation "com.google.firebase:firebase-analytics-ktx:$firebaseAnalyticsVersion"

    //Crashlytics
    implementation "com.google.firebase:firebase-crashlytics:$crashlyticsVersion"

    //HMS
    implementation "com.huawei.agconnect:agconnect-crash:$hmsCrashVersion"
    implementation "com.huawei.hms:hianalytics:$hmsAnalyticsVersion"
    implementation "com.huawei.hms:push:$hmsPushVersion"
    hmsImplementation "com.huawei.hms:appservice:$hmsAppService"

    // QR Scanner
    implementation 'com.budiyev.android:code-scanner:2.1.0'

    // JWTDecode
    implementation "com.auth0.android:jwtdecode:$JWTDecodeVersion"

    // JWT
    implementation "io.jsonwebtoken:jjwt:${JWTVersion}"

    // Play core
    implementation "com.google.android.play:core:${playCoreVersion}"

    //ViewPager2
    implementation "androidx.viewpager2:viewpager2:${viewPager2Version}"

    //DotsIndicator
    implementation "com.tbuonomo:dotsindicator:${dotsIndicatorVersion}"

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${swipeRefreshVersion}"

    implementation 'ehn.techiop.hcert:hcert-kotlin-jvm:1.4.0-CUSTOM'

    //Graphics
    implementation "com.github.PhilJay:MPAndroidChart:${mpaChartVersion}"

}

apply plugin: 'com.google.gms.google-services'

check.dependsOn ktlint
